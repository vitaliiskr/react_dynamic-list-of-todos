{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","filterInput","selectedTodos","handleInputChange","event","setState","target","value","handleSelectTodos","filterTodos","todos","filter","todo","completed","filterbyTitle","title","includes","this","props","selectUser","selectedUserId","filteredTodos","className","type","placeholder","onChange","map","key","id","checked","readOnly","userId","onClick","React","Component","getUser","fetch","then","response","json","data","CurrentUser","visibleUser","user","prevProps","name","email","phone","clearUser","App","resetSelectedUser","currentUser","ReactDOM","render","document","getElementById"],"mappings":"yUAIaA,G,kBAAb,4MACEC,MAAQ,CACNC,YAAa,GACbC,cAAe,OAHnB,EAMEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZJ,YAAaG,EAAME,OAAOC,SARhC,EAYEC,kBAAoB,SAACJ,GACnB,EAAKC,SAAS,CACZH,cAAeE,EAAME,OAAOC,SAdlC,EAkBEE,YAAc,SAACC,GACb,MAAiC,WAA7B,EAAKV,MAAME,cACNQ,EAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAGH,cAA7B,EAAKb,MAAME,cACNQ,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAG5BH,GA3BX,EA8BEI,cAAgB,SAACJ,GACf,MAA+B,KAA3B,EAAKV,MAAMC,YACNS,EAAMC,QAAO,SAAAC,GAAI,OAAmB,OAAfA,EAAKG,SAC9BJ,QAAO,SAAAC,GAAI,OAAIA,EAAKG,MAAMC,SAAS,EAAKhB,MAAMC,gBAG5CS,GApCX,4CAuCE,WAAU,IAAD,EACuCO,KAAKC,MAA3CR,EADD,EACCA,MAAOS,EADR,EACQA,WAAYC,EADpB,EACoBA,eAErBlB,EAAgBe,KAAKR,YAAYC,GACjCW,EAAgBJ,KAAKH,cAAcZ,GAEzC,OACE,yBAAKoB,UAAU,YACb,sCACA,yBAAKA,UAAU,4BACb,2BACEA,UAAU,kBACVC,KAAK,OACLC,YAAY,YACZjB,MAAOU,KAAKjB,MAAMc,cAClBW,SAAUR,KAAKd,oBAEjB,4BACEI,MAAOU,KAAKjB,MAAME,cAClBuB,SAAUR,KAAKT,mBAEf,4BAAQD,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,cAEF,wBAAIe,UAAU,kBAEVD,EAAcK,KAAI,SAAAd,GAAI,OACpB,wBACEU,UAAS,gEAEPV,EAAKC,UACH,0BACA,6BACJc,IAAKf,EAAKgB,IAEV,+BACE,2BACEL,KAAK,WACLM,QAASjB,EAAKC,UACdiB,UAAQ,IAEV,2BAAIlB,EAAKG,QAEX,4BACEO,UAAS,kFAEPF,IAAmBR,EAAKmB,OACtB,kCACA,IACJR,KAAK,SACLS,QAAS,kBAAMb,EAAWP,EAAKmB,UAPjC,YAUGnB,EAAKmB,mBA7F1B,GAA8BE,IAAMC,Y,MCI7B,SAASC,EAAQJ,GACtB,OAAOK,MAAM,GAAD,OARK,yCAQL,OAAiBL,IAC1BM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,QCNxB,IAAMC,EAAb,4MACEzC,MAAQ,CACN0C,YAAa,MAFjB,uDAKE,WAAqB,IAAD,OAClBP,EAAQlB,KAAKC,MAAMa,QAChBM,MAAK,SAAAM,GAAI,OAAI,EAAKtC,SAAS,CAC1BqC,YAAaC,SARrB,gCAYE,SAAmBC,GAAY,IAAD,OACxB3B,KAAKC,MAAMa,SAAWa,EAAUb,QAClCI,EAAQlB,KAAKC,MAAMa,QAChBM,MAAK,SAAAM,GAAI,OAAI,EAAKtC,SAAS,CAC1BqC,YAAaC,SAhBvB,oBAqBE,WAAU,IACAD,EAAgBzB,KAAKjB,MAArB0C,YAER,OAAKA,EAKH,yBAAKpB,UAAU,eACb,wBAAIA,UAAU,sBACZ,0DAEOoB,EAAYd,MAGrB,wBAAIN,UAAU,qBAAqBoB,EAAYG,MAC/C,uBAAGvB,UAAU,sBAAsBoB,EAAYI,OAC/C,uBAAGxB,UAAU,sBAAsBoB,EAAYK,OAC/C,4BACExB,KAAK,SACLD,UAAU,SACVU,QAASf,KAAKC,MAAM8B,WAHtB,UAdM,4CAzBd,GAAiCf,IAAMC,WCgExBe,E,4MA7DbjD,MAAQ,CACNU,MAAO,GACPU,eAAgB,G,EASlBD,WAAa,SAACY,GACZ,EAAK1B,SAAS,CACZe,eAAgBW,K,EAIpBmB,kBAAoB,WAClB,EAAK7C,SAAS,CACZe,eAAgB,K,uDAdpB,WAAqB,IAAD,OFTbgB,MAJQ,wCAKZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UEShBF,MAAK,SAAAC,GAAQ,OAAI,EAAKjC,SAAS,CACxCK,MAAO4B,EAASE,Y,oBAsBpB,WAAU,IAAD,EAIavB,KAAKjB,MAFrBU,EAFG,EAEHA,MACAU,EAHG,EAGHA,eACA+B,EAJG,EAIHA,YAEJ,OACE,yBAAK7B,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEZ,MAAOA,EACPS,WAAYF,KAAKE,WACjBC,eAAgBA,KAIpB,yBAAKE,UAAU,gBACb,yBAAKA,UAAU,0BACZF,EACC,kBAAC,EAAD,CACEW,OAAQX,EACRuB,KAAMQ,EACNH,UAAW/B,KAAKiC,oBAEhB,0B,GAtDEjB,IAAMC,WCHxBkB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.1ff775e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterInput: '',\n    selectedTodos: 'All',\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      filterInput: event.target.value,\n    });\n  }\n\n  handleSelectTodos = (event) => {\n    this.setState({\n      selectedTodos: event.target.value,\n    });\n  }\n\n  filterTodos = (todos) => {\n    if (this.state.selectedTodos === 'Active') {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    if (this.state.selectedTodos === 'Completed') {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  }\n\n  filterbyTitle = (todos) => {\n    if (this.state.filterInput !== '') {\n      return todos.filter(todo => todo.title !== null)\n        .filter(todo => todo.title.includes(this.state.filterInput));\n    }\n\n    return todos;\n  }\n\n  render() {\n    const { todos, selectUser, selectedUserId } = this.props;\n\n    const selectedTodos = this.filterTodos(todos);\n    const filteredTodos = this.filterbyTitle(selectedTodos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <input\n            className=\"TodoList__input\"\n            type=\"text\"\n            placeholder=\"Find Todo\"\n            value={this.state.filterbyTitle}\n            onChange={this.handleInputChange}\n          />\n          <select\n            value={this.state.selectedTodos}\n            onChange={this.handleSelectTodos}\n          >\n            <option value=\"All\">All</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Completed\">Completed</option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {\n              filteredTodos.map(todo => (\n                <li\n                  className={`\n                  TodoList__item\n                  ${todo.completed\n                    ? 'TodoList__item--checked'\n                    : 'TodoList__item--unchecked'}`}\n                  key={todo.id}\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={todo.completed}\n                      readOnly\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n                  <button\n                    className={`\n                    TodoList__user-button button\n                    ${selectedUserId === todo.userId\n                      ? 'TodoList__user-button--selected'\n                      : ''}`}\n                    type=\"button\"\n                    onClick={() => selectUser(todo.userId)}\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const todosApi = 'https://mate-api.herokuapp.com/todos';\nconst detailsApi = 'https://mate-api.herokuapp.com/users/';\n\nexport function getTodos() {\n  return fetch(todosApi)\n    .then(response => response.json());\n}\n\nexport function getUser(userId) {\n  return fetch(`${detailsApi}${userId}`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    visibleUser: null,\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({\n        visibleUser: user,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({\n          visibleUser: user,\n        }));\n    }\n  }\n\n  render() {\n    const { visibleUser } = this.state;\n\n    if (!visibleUser) {\n      return (<div>Loading</div>);\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {` ${visibleUser.id}`}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{visibleUser.name}</h3>\n        <p className=\"CurrentUser__email\">{visibleUser.email}</p>\n        <p className=\"CurrentUser__phone\">{visibleUser.phone}</p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then(response => this.setState({\n      todos: response.data,\n    }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  resetSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  // handleSelectTodos = (selectEvent) => {\n  //   this.setState({\n  //     selectedTodos: selectEvent.value\n  //   });\n  // }\n\n  render() {\n    const\n      { todos,\n        selectedUserId,\n        currentUser } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                user={currentUser}\n                clearUser={this.resetSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}